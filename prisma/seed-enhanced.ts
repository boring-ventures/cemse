import { PrismaClient, UserRole, EducationLevel, JobStatus, ApplicationStatus, ContractType, ExperienceLevel, WorkModality, CourseLevel, CourseCategory, YouthApplicationStatus, CompanyInterestStatus, MessageType, MessageStatus, YouthMessageSenderType } from '@prisma/client';
import bcrypt from 'bcrypt';

const prisma = new PrismaClient();

// Helper function to generate random dates
function randomDate(start: Date, end: Date): Date {
  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
}

// Helper function to generate random number
function randomInt(min: number, max: number): number {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

// Helper function to pick random items from array
function pickRandom<T>(array: T[], count: number = 1): T[] {
  const shuffled = [...array].sort(() => 0.5 - Math.random());
  return shuffled.slice(0, count);
}

// Lists of realistic data
const firstNames = ['Mar√≠a', 'Juan', 'Ana', 'Carlos', 'Laura', 'Diego', 'Sofia', 'Luis', 'Valentina', 'Miguel', 'Isabella', 'Alejandro', 'Camila', 'Fernando', 'Daniela', 'Ricardo', 'Paula', 'Gabriel', 'Andrea', 'Roberto'];
const lastNames = ['Rodriguez', 'Gonz√°lez', 'Mart√≠nez', 'L√≥pez', 'S√°nchez', 'P√©rez', 'Garc√≠a', 'Fern√°ndez', 'Torres', 'Flores', 'Rivera', 'Mendoza', 'Vargas', 'Castro', 'Ortiz', 'Silva', 'Rojas', 'Morales', 'Jim√©nez', 'Herrera'];
const skills = ['JavaScript', 'Python', 'React', 'Node.js', 'TypeScript', 'Java', 'C++', 'SQL', 'MongoDB', 'AWS', 'Docker', 'Git', 'Marketing Digital', 'Dise√±o Gr√°fico', 'Excel Avanzado', 'Ingl√©s Avanzado', 'Gesti√≥n de Proyectos', 'Comunicaci√≥n', 'Trabajo en Equipo', 'Liderazgo'];
const interests = ['Tecnolog√≠a', 'Emprendimiento', 'Sostenibilidad', 'Educaci√≥n', 'Salud', 'Arte y Cultura', 'Deportes', 'Ciencias', 'Innovaci√≥n Social', 'Desarrollo Comunitario', 'Medio Ambiente', 'Finanzas', 'Turismo', 'Agricultura', 'Energ√≠as Renovables'];
const municipalities = ['Cochabamba', 'Santa Cruz', 'La Paz', 'Sacaba', 'Quillacollo', 'El Alto', 'Oruro', 'Tarija', 'Potos√≠', 'Sucre'];
const universities = ['Universidad Mayor de San Sim√≥n', 'Universidad Privada Boliviana', 'Universidad Cat√≥lica Boliviana', 'Universidad Central', 'Universidad del Valle', 'UNIFRANZ', 'Universidad T√©cnica de Oruro', 'Universidad Aut√≥noma Gabriel Ren√© Moreno'];
const degrees = ['Ingenier√≠a de Sistemas', 'Administraci√≥n de Empresas', 'Ingenier√≠a Industrial', 'Contabilidad', 'Medicina', 'Derecho', 'Psicolog√≠a', 'Arquitectura', 'Marketing', 'Comunicaci√≥n Social', 'Ingenier√≠a Civil', 'Econom√≠a'];
const companyNames = ['TechStart Bolivia', 'InnovaLab SRL', 'Digital Solutions SA', 'CodeCraft Bolivia', 'StartupHub CB', 'TechForward Solutions', 'ByteWise Systems', 'CloudNative Bolivia', 'DataDriven SA', 'SmartDev Bolivia'];

interface YouthProfileData {
  username: string;
  firstName: string;
  lastName: string;
  email: string;
  phone: string;
  birthDate: Date;
  educationLevel: EducationLevel;
  skills: string[];
  interests: string[];
  municipality: string;
  currentDegree?: string;
  universityName?: string;
  universityStartDate?: Date;
  universityStatus?: string;
  gpa?: number;
  workExperience?: any;
}

async function main() {
  console.log('üå± Starting enhanced database seed for YOUTH users...');

  try {
    // Create realistic YOUTH profiles
    const youthProfiles: YouthProfileData[] = [];
    
    for (let i = 0; i < 25; i++) {
      const firstName = firstNames[i % firstNames.length];
      const lastName = `${lastNames[i % lastNames.length]} ${lastNames[(i + 5) % lastNames.length]}`;
      const username = `${firstName.toLowerCase()}_${lastName.split(' ')[0].toLowerCase()}${randomInt(1, 99)}`;
      const birthYear = randomInt(1998, 2006);
      
      youthProfiles.push({
        username,
        firstName,
        lastName,
        email: `${username}@email.com`,
        phone: `+591 ${randomInt(60000000, 79999999)}`,
        birthDate: new Date(birthYear, randomInt(0, 11), randomInt(1, 28)),
        educationLevel: pickRandom([EducationLevel.SECONDARY, EducationLevel.TECHNICAL, EducationLevel.UNIVERSITY])[0],
        skills: pickRandom(skills, randomInt(3, 8)),
        interests: pickRandom(interests, randomInt(2, 5)),
        municipality: pickRandom(municipalities)[0],
        currentDegree: pickRandom(degrees)[0],
        universityName: pickRandom(universities)[0],
        universityStartDate: new Date(2020 + randomInt(0, 3), randomInt(0, 1) * 6, 1),
        universityStatus: pickRandom(['en_curso', 'graduado', 'pausado'])[0],
        gpa: Math.round((3 + Math.random() * 1.5) * 100) / 100,
        workExperience: i % 3 === 0 ? {
          positions: [{
            title: pickRandom(['Pasante', 'Asistente', 'Junior Developer', 'Auxiliar'])[0],
            company: pickRandom(companyNames)[0],
            startDate: new Date(2023, randomInt(0, 11), 1).toISOString(),
            endDate: i % 2 === 0 ? new Date(2024, randomInt(0, 11), 1).toISOString() : null,
            current: i % 2 === 1,
            description: 'Apoyo en diversas tareas relacionadas con el √°rea de tecnolog√≠a y desarrollo.'
          }]
        } : null
      });
    }

    // Create YOUTH users and profiles
    const createdYouthUsers = [];
    const hashedPassword = await bcrypt.hash('password123', 10);

    for (const profileData of youthProfiles) {
      const user = await prisma.user.create({
        data: {
          username: profileData.username,
          password: hashedPassword,
          role: UserRole.YOUTH,
          isActive: true,
        },
      });

      const profile = await prisma.profile.create({
        data: {
          userId: user.id,
          firstName: profileData.firstName,
          lastName: profileData.lastName,
          email: profileData.email,
          phone: profileData.phone,
          birthDate: profileData.birthDate,
          gender: randomInt(0, 1) === 0 ? 'Masculino' : 'Femenino',
          documentType: 'CI',
          documentNumber: `${randomInt(1000000, 9999999)}`,
          educationLevel: profileData.educationLevel,
          currentInstitution: profileData.universityName,
          currentDegree: profileData.currentDegree,
          universityName: profileData.universityName,
          universityStartDate: profileData.universityStartDate,
          universityStatus: profileData.universityStatus,
          gpa: profileData.gpa,
          skills: profileData.skills,
          interests: profileData.interests,
          municipality: profileData.municipality,
          department: 'Cochabamba',
          country: 'Bolivia',
          address: `Calle ${randomInt(1, 50)} #${randomInt(100, 999)}`,
          workExperience: profileData.workExperience,
          profileCompletion: randomInt(60, 95),
          role: UserRole.YOUTH,
          status: 'ACTIVE',
          active: true,
          jobTitle: profileData.workExperience ? profileData.workExperience.positions[0].title : null,
          academicAchievements: randomInt(0, 2) === 0 ? {
            achievements: [
              'Mejor promedio de la carrera',
              'Participaci√≥n en olimpiadas de programaci√≥n',
              'Proyecto destacado en feria tecnol√≥gica'
            ].slice(0, randomInt(1, 3))
          } : null,
          languages: {
            languages: [
              { language: 'Espa√±ol', level: 'Nativo' },
              { language: 'Ingl√©s', level: pickRandom(['B√°sico', 'Intermedio', 'Avanzado'])[0] },
            ]
          },
          extracurricularActivities: {
            activities: [
              'Voluntariado en fundaci√≥n educativa',
              'Miembro del club de rob√≥tica',
              'Organizador de eventos tecnol√≥gicos universitarios'
            ].slice(0, randomInt(0, 3))
          },
        },
      });

      createdYouthUsers.push({ user, profile });
    }

    console.log(`‚úÖ Created ${createdYouthUsers.length} YOUTH users with complete profiles`);

    // Create sample companies for interactions
    const companies = [];
    for (let i = 0; i < 10; i++) {
      const companyName = companyNames[i];
      const companyUser = await prisma.user.create({
        data: {
          username: companyName.toLowerCase().replace(/\s+/g, '_'),
          password: hashedPassword,
          role: UserRole.COMPANIES,
          isActive: true,
        },
      });

      const company = await prisma.company.create({
        data: {
          userId: companyUser.id,
          name: companyName,
          taxId: `NIT${randomInt(1000000, 9999999)}`,
          email: `rrhh@${companyName.toLowerCase().replace(/\s+/g, '')}.com`,
          phone: `+591 ${randomInt(3, 4)}${randomInt(1000000, 9999999)}`,
          website: `www.${companyName.toLowerCase().replace(/\s+/g, '')}.com`,
          description: `${companyName} es una empresa l√≠der en soluciones tecnol√≥gicas y desarrollo de software en Bolivia.`,
          industry: pickRandom(['Tecnolog√≠a', 'Software', 'Consultor√≠a IT', 'Desarrollo Web'])[0],
          size: pickRandom(['1-10', '11-50', '51-200', '200+'])[0],
          foundedYear: randomInt(2010, 2023),
          logo: null,
          isVerified: true,
          isActive: true,
          address: `Av. Tecnol√≥gica ${randomInt(100, 999)}, ${pickRandom(municipalities)[0]}`,
          city: pickRandom(municipalities)[0],
          country: 'Bolivia',
        },
      });

      companies.push(company);
    }

    console.log(`‚úÖ Created ${companies.length} companies`);

    // Create Youth Applications with realistic content
    const youthApplications = [];
    for (let i = 0; i < Math.min(15, createdYouthUsers.length); i++) {
      const youth = createdYouthUsers[i];
      const applicationTitles = [
        'Desarrollador Frontend Junior - Buscando Primera Oportunidad',
        'Estudiante de Ingenier√≠a de Sistemas - Disponible para Pasant√≠as',
        'Reci√©n Graduado en Administraci√≥n - √Årea de Marketing Digital',
        'Desarrollador Full Stack en Formaci√≥n - Proyectos Freelance',
        'Dise√±ador UI/UX Junior - Portfolio Disponible',
        'Analista de Datos Junior - Python y SQL',
        'Community Manager - Experiencia en Redes Sociales',
        'Asistente Administrativo - Manejo Avanzado de Office',
        'Desarrollador Mobile - React Native',
        'QA Tester Junior - Certificaci√≥n ISTQB en Proceso'
      ];

      const applicationDescriptions = [
        'Estudiante apasionado por la tecnolog√≠a con conocimientos en React, TypeScript y Node.js. He desarrollado varios proyectos personales y busco mi primera oportunidad laboral para aplicar mis conocimientos y seguir aprendiendo en un ambiente profesional.',
        'Cursando √∫ltimo a√±o de Ingenier√≠a de Sistemas con excelente promedio acad√©mico. Tengo experiencia en proyectos universitarios usando Java, Python y bases de datos SQL. Busco una pasant√≠a donde pueda aportar mis conocimientos y adquirir experiencia pr√°ctica.',
        'Reci√©n graduado en Administraci√≥n de Empresas con especializaci√≥n en Marketing Digital. Manejo herramientas como Google Analytics, Facebook Ads y dise√±o b√°sico. Busco iniciar mi carrera profesional en una empresa din√°mica.',
        'Desarrollador autodidacta con 2 a√±os de experiencia en proyectos freelance. Domino el stack MERN y tengo experiencia con AWS. Busco una posici√≥n estable donde pueda crecer profesionalmente.',
        'Dise√±ador con formaci√≥n en UX/UI y manejo de Figma, Adobe XD y principios de dise√±o centrado en el usuario. Portfolio con m√°s de 10 proyectos disponible. Busco unirme a un equipo creativo.',
      ];

      const application = await prisma.youthApplication.create({
        data: {
          youthProfileId: youth.user.id,
          title: applicationTitles[i % applicationTitles.length],
          description: applicationDescriptions[i % applicationDescriptions.length],
          status: pickRandom([YouthApplicationStatus.ACTIVE, YouthApplicationStatus.PAUSED])[0],
          isPublic: Math.random() > 0.2, // 80% public
          viewsCount: randomInt(10, 500),
          applicationsCount: randomInt(0, 25),
          cvFile: 'cv_sample.pdf',
          coverLetterFile: Math.random() > 0.5 ? 'cover_letter_sample.pdf' : null,
        },
      });

      youthApplications.push({ application, youth });
    }

    console.log(`‚úÖ Created ${youthApplications.length} youth applications`);

    // Create Company Interests in Youth Applications
    for (let i = 0; i < 30; i++) {
      const application = pickRandom(youthApplications)[0];
      const company = pickRandom(companies)[0];

      try {
        const interest = await prisma.youthApplicationCompanyInterest.create({
          data: {
            applicationId: application.application.id,
            companyId: company.id,
            status: pickRandom([
              CompanyInterestStatus.INTERESTED,
              CompanyInterestStatus.CONTACTED,
              CompanyInterestStatus.INTERVIEW_SCHEDULED,
            ])[0],
            message: pickRandom([
              'Nos interesa tu perfil para una posici√≥n junior en nuestro equipo de desarrollo.',
              'Tu experiencia y habilidades encajan con lo que buscamos. ¬øPodr√≠amos coordinar una entrevista?',
              'Hemos revisado tu postulaci√≥n y nos gustar√≠a conocerte mejor. ¬øTienes disponibilidad esta semana?',
              'Tu perfil es muy interesante. Nos gustar√≠a discutir oportunidades en nuestra empresa.',
            ])[0],
          },
        });

        // Create some messages for the interaction
        if (Math.random() > 0.5) {
          const messages = [
            { 
              senderId: company.userId, 
              senderType: YouthMessageSenderType.COMPANY,
              content: 'Hola! Hemos visto tu postulaci√≥n y estamos muy interesados en tu perfil.' 
            },
            { 
              senderId: application.youth.user.id, 
              senderType: YouthMessageSenderType.YOUTH,
              content: 'Muchas gracias por su inter√©s! Estoy muy emocionado por esta oportunidad.' 
            },
            { 
              senderId: company.userId, 
              senderType: YouthMessageSenderType.COMPANY,
              content: '¬øPodr√≠as enviarnos tu disponibilidad para una entrevista virtual esta semana?' 
            },
          ];

          for (const msg of messages) {
            await prisma.youthApplicationMessage.create({
              data: {
                applicationId: application.application.id,
                senderId: msg.senderId,
                senderType: msg.senderType,
                content: msg.content,
                messageType: MessageType.TEXT,
                status: MessageStatus.READ,
                readAt: new Date(),
              },
            });
          }
        }
      } catch (error) {
        // Skip if duplicate
      }
    }

    console.log(`‚úÖ Created company interests and messages`);

    // Create Job Offers
    const jobOffers = [];
    for (let i = 0; i < 25; i++) {
      const company = pickRandom(companies)[0];
      const jobTitles = [
        'Desarrollador Frontend Junior',
        'Desarrollador Backend Junior',
        'Analista de Datos',
        'Dise√±ador UI/UX',
        'Community Manager',
        'Asistente de Marketing Digital',
        'QA Tester',
        'DevOps Junior',
        'Scrum Master Junior',
        'Business Analyst',
      ];

      const jobDescriptions = [
        'Buscamos un desarrollador frontend junior con conocimientos en React y TypeScript para unirse a nuestro equipo de desarrollo.',
        'Requerimos un desarrollador backend con experiencia en Node.js y bases de datos SQL para trabajar en proyectos innovadores.',
        'Buscamos un analista de datos con conocimientos en Python y SQL para ayudar en la toma de decisiones basada en datos.',
        'Necesitamos un dise√±ador UI/UX creativo con experiencia en Figma para dise√±ar interfaces modernas y atractivas.',
      ];

      const jobOffer = await prisma.jobOffer.create({
        data: {
          companyId: company.id,
          title: jobTitles[i % jobTitles.length],
          description: jobDescriptions[i % jobDescriptions.length],
          requirements: [
            'Estudiante o graduado de carreras afines',
            'Conocimientos b√°sicos en el √°rea requerida',
            'Capacidad de trabajo en equipo',
            'Ganas de aprender y crecer profesionalmente',
            'Disponibilidad inmediata',
          ],
          benefits: [
            'Salario competitivo',
            'Horario flexible',
            'Trabajo remoto/h√≠brido',
            'Capacitaci√≥n constante',
            'Ambiente de trabajo din√°mico',
            'Oportunidades de crecimiento',
          ],
          location: pickRandom(municipalities)[0],
          salary: `${randomInt(2500, 8000)} BOB`,
          contractType: pickRandom([ContractType.FULL_TIME, ContractType.PART_TIME, ContractType.INTERNSHIP])[0],
          workModality: pickRandom([WorkModality.REMOTE, WorkModality.ONSITE, WorkModality.HYBRID])[0],
          experienceLevel: pickRandom([ExperienceLevel.JUNIOR, ExperienceLevel.ENTRY_LEVEL, ExperienceLevel.INTERNSHIP])[0],
          status: JobStatus.ACTIVE,
          isActive: true,
          publishedAt: randomDate(new Date(2024, 0, 1), new Date()),
          deadline: randomDate(new Date(), new Date(2025, 11, 31)),
          vacancies: randomInt(1, 5),
          applicationsCount: randomInt(5, 50),
        },
      });

      jobOffers.push(jobOffer);
    }

    console.log(`‚úÖ Created ${jobOffers.length} job offers`);

    // Create Job Applications
    for (let i = 0; i < 50; i++) {
      const youth = pickRandom(createdYouthUsers)[0];
      const jobOffer = pickRandom(jobOffers)[0];

      try {
        await prisma.jobApplication.create({
          data: {
            jobOfferId: jobOffer.id,
            applicantId: youth.user.id,
            coverLetter: 'Me considero un candidato ideal para esta posici√≥n debido a mi formaci√≥n acad√©mica y mi pasi√≥n por la tecnolog√≠a. Tengo experiencia en proyectos universitarios y personales que demuestran mi capacidad de aprendizaje y resoluci√≥n de problemas.',
            status: pickRandom([
              ApplicationStatus.SENT,
              ApplicationStatus.UNDER_REVIEW,
              ApplicationStatus.PRE_SELECTED,
            ])[0],
            appliedAt: randomDate(new Date(2024, 0, 1), new Date()),
          },
        });
      } catch (error) {
        // Skip if duplicate
      }
    }

    console.log(`‚úÖ Created job applications`);

    // Create sample Courses
    const courseCategories = [
      { title: 'Desarrollo Web con React', category: CourseCategory.TECHNOLOGY },
      { title: 'Marketing Digital para Emprendedores', category: CourseCategory.BUSINESS },
      { title: 'Ingl√©s para Profesionales', category: CourseCategory.LANGUAGES },
      { title: 'Excel Avanzado para An√°lisis de Datos', category: CourseCategory.TECHNOLOGY },
      { title: 'Liderazgo y Gesti√≥n de Equipos', category: CourseCategory.PERSONAL_DEVELOPMENT },
      { title: 'Introducci√≥n a la Inteligencia Artificial', category: CourseCategory.TECHNOLOGY },
      { title: 'Finanzas Personales', category: CourseCategory.BUSINESS },
      { title: 'Dise√±o Gr√°fico con Adobe', category: CourseCategory.DESIGN },
      { title: 'Emprendimiento Social', category: CourseCategory.ENTREPRENEURSHIP },
      { title: 'Comunicaci√≥n Efectiva', category: CourseCategory.PERSONAL_DEVELOPMENT },
    ];

    const instructorUser = await prisma.user.create({
      data: {
        username: 'instructor_principal',
        password: hashedPassword,
        role: UserRole.INSTRUCTOR,
        isActive: true,
      },
    });

    const courses = [];
    for (let i = 0; i < courseCategories.length; i++) {
      const course = await prisma.course.create({
        data: {
          title: courseCategories[i].title,
          description: `Curso completo de ${courseCategories[i].title} con contenido actualizado y ejercicios pr√°cticos.`,
          shortDescription: `Aprende ${courseCategories[i].title} desde cero hasta nivel avanzado.`,
          category: courseCategories[i].category,
          level: pickRandom([CourseLevel.BEGINNER, CourseLevel.INTERMEDIATE])[0],
          duration: randomInt(20, 80),
          price: randomInt(0, 500),
          currency: 'BOB',
          thumbnail: `course_${i + 1}.jpg`,
          instructorId: instructorUser.id,
          isPublished: true,
          isActive: true,
          isFeatured: Math.random() > 0.7,
          requirements: [
            'Computadora con acceso a internet',
            'Conocimientos b√°sicos de inform√°tica',
            'Ganas de aprender',
          ],
          objectives: [
            'Dominar los conceptos fundamentales',
            'Aplicar los conocimientos en proyectos reales',
            'Obtener certificaci√≥n al completar el curso',

          ],
          enrollmentCount: randomInt(50, 500),
          rating: Math.round((4 + Math.random()) * 10) / 10,
          totalRatings: randomInt(10, 100),
        },
      });

      courses.push(course);

      // Create course modules
      for (let j = 0; j < 3; j++) {
        const module = await prisma.courseModule.create({
          data: {
            courseId: course.id,
            title: `M√≥dulo ${j + 1}: ${j === 0 ? 'Introducci√≥n' : j === 1 ? 'Desarrollo' : 'Proyecto Final'}`,
            description: `Contenido del m√≥dulo ${j + 1} del curso`,
            orderIndex: j,
            duration: randomInt(5, 15),
            isPublished: true,
          },
        });

        // Create lessons for each module
        for (let k = 0; k < 3; k++) {
          await prisma.lesson.create({
            data: {
              moduleId: module.id,
              title: `Lecci√≥n ${k + 1}`,
              description: `Contenido de la lecci√≥n ${k + 1}`,
              content: `# Lecci√≥n ${k + 1}\n\nContenido detallado de la lecci√≥n...`,
              videoUrl: Math.random() > 0.5 ? `https://www.youtube.com/watch?v=example${k}` : null,
              duration: randomInt(10, 30),
              orderIndex: k,
              isPublished: true,
              isFree: k === 0, // First lesson free
            },
          });
        }
      }
    }

    console.log(`‚úÖ Created ${courses.length} courses with modules and lessons`);

    // Create Course Enrollments
    for (let i = 0; i < 30; i++) {
      const youth = pickRandom(createdYouthUsers)[0];
      const course = pickRandom(courses)[0];

      try {
        await prisma.courseEnrollment.create({
          data: {
            courseId: course.id,
            studentId: youth.user.id,
            enrolledAt: randomDate(new Date(2024, 0, 1), new Date()),
            progress: randomInt(0, 100),
            completedAt: Math.random() > 0.7 ? new Date() : null,
            lastAccessedAt: new Date(),
          },
        });
      } catch (error) {
        // Skip if duplicate
      }
    }

    console.log(`‚úÖ Created course enrollments`);

    // Create sample News Articles
    const newsArticles = [];
    for (let i = 0; i < 15; i++) {
      const newsTitles = [
        'Nueva convocatoria de becas para j√≥venes emprendedores',
        'Feria de empleo tecnol√≥gico este fin de semana',
        'Programa de capacitaci√≥n gratuita en desarrollo web',
        'Empresas locales buscan talento joven',
        'Lanzamiento de incubadora de startups juveniles',
        'Taller de preparaci√≥n para entrevistas laborales',
        'Oportunidades de pasant√≠as en empresas internacionales',
        'Curso intensivo de ingl√©s para profesionales',
        'Hackathon universitario con premios en efectivo',
        'Programa de mentor√≠a para j√≥venes profesionales',
      ];

      const article = await prisma.newsArticle.create({
        data: {
          title: newsTitles[i % newsTitles.length],
          content: `Contenido detallado del art√≠culo de noticias sobre ${newsTitles[i % newsTitles.length]}. Esta es una excelente oportunidad para los j√≥venes de nuestra comunidad.`,
          summary: `Resumen del art√≠culo sobre ${newsTitles[i % newsTitles.length]}`,
          imageUrl: `news_${i + 1}.jpg`,
          authorId: pickRandom(createdYouthUsers)[0].user.id,
          category: pickRandom(['education', 'employment', 'technology', 'entrepreneurship'])[0],
          tags: pickRandom(['juventud', 'oportunidades', 'educaci√≥n', 'empleo', 'tecnolog√≠a'], 3),
          isPublished: true,
          isFeatured: Math.random() > 0.8,
          viewsCount: randomInt(100, 5000),
          publishedAt: randomDate(new Date(2024, 0, 1), new Date()),
        },
      });

      newsArticles.push(article);
    }

    console.log(`‚úÖ Created ${newsArticles.length} news articles`);

    // Create Entrepreneurships
    for (let i = 0; i < 10; i++) {
      const youth = createdYouthUsers[i];
      const entrepreneurshipNames = [
        'EcoTech Solutions',
        'Digital Marketing Pro',
        'App Delivery Express',
        'Green Energy Bolivia',
        'Educational Games Studio',
        'Health Tech Innovation',
        'Local Food Marketplace',
        'Smart Home Solutions',
        'Fashion Sustainable',
        'Tourism Tech Platform',
      ];

      await prisma.entrepreneurship.create({
        data: {
          ownerId: youth.user.id,
          name: entrepreneurshipNames[i],
          description: `${entrepreneurshipNames[i]} es un emprendimiento innovador que busca resolver problemas reales mediante tecnolog√≠a y creatividad.`,
          category: pickRandom(['technology', 'social', 'education', 'health', 'environment'])[0],
          stage: pickRandom(['IDEA', 'PROTOTYPE', 'MVP', 'GROWTH'])[0],
          website: `www.${entrepreneurshipNames[i].toLowerCase().replace(/\s+/g, '')}.com`,
          logo: `logo_${i + 1}.png`,
          teamSize: randomInt(1, 10),
          location: pickRandom(municipalities)[0],
          isActive: true,
          isFeatured: Math.random() > 0.7,
          viewsCount: randomInt(50, 1000),
        },
      });
    }

    console.log(`‚úÖ Created entrepreneurships`);

    console.log('‚ú® Enhanced seeding completed successfully!');
    console.log(`
    Summary:
    - 25 YOUTH users with complete profiles
    - 10 Companies
    - 15 Youth Applications
    - 25 Job Offers
    - 50+ Job Applications
    - 10 Courses with modules and lessons
    - 30+ Course Enrollments
    - 15 News Articles
    - 10 Entrepreneurships
    - Company interests and messages
    `);

  } catch (error) {
    console.error('Error during seeding:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

main()
  .catch((e) => {
    console.error('Seeding failed:', e);
    process.exit(1);
  });
  });